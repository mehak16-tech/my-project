PROJECT: Drawing Tool with Canvas and Clear Function
1) Technologies Used:
  a) HTML5 (Canvas element and page structure)
  b) CSS3 (Layout, styling, shadows, hover effects)
  c) JavaScript (Drawing logic and clear functionality)

2) Project Overview:
  a) In this project, I created a simple Drawing Tool using the HTML5 <canvas> element and JavaScript.
  b) The user can draw freely on the canvas using the mouse and also has the option to clear the canvas with a button.
  c) Such a tool can be applied in sketching apps, online classrooms, or basic design boards.
  d) The interface is designed with a centered layout, modern styling, and responsive alignment for better usability.

3) Structure:
  a) Drawing Functionality:
    i) Implemented drawing by tracking mouse events (mousedown, mousemove, and mouseup). 
   ii) The canvas listens to the mouse position and draws smooth lines with adjustable properties like color, width, and line style.
   SNIPPET:
        canvas.addEventListener('mousedown', (event) => {
            isDrawing = true;
            const rect = canvas.getBoundingClientRect();
            [lastX, lastY] = [event.clientX - rect.left, event.clientY - rect.top];
            ctx.lineWidth = 3;
            ctx.lineCap = 'round';
            ctx.strokeStyle = 'blue';
        });


  b) Header:
    i) Title of the project: “Virappan’s Drawing Tool”
   ii) Placed above the canvas in a neat container.
       SNIPPET:
          <h1>Virappan's Drawing Tool</h1>

            
  C) Canvas:
    i) Main area where user can draw using mouse.
   ii) Bordered and styled with shadows and dashed lines for clear visibility.  
       SNIPPET:
          <canvas id="drawing-canvas" width="800" height="600"></canvas>

  d) Toolbar (Clear Button):
    i) A button to clear the drawing canvas.
   ii) Styled with hover and active effects for better interaction.
       SNIPPET:
          <button id="clear-canvas">Clear</button>
 
  e) JavaScript Clear Function:
    i) Clears the entire canvas using clearRect().
   ii) Resets the canvas back to its original blank state.
        SNIPPET:
          clearButton.addEventListener('click', () => {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
          });



4) Learning Outcomes
  a) Learned how to use the HTML5 Canvas API for interactive graphics.
  b) Understood the use of mouse events for creating real-time drawing functionality.
  c) Explored CSS styling with gradients, box-shadows, and hover effects to improve UI design.
  d) Practiced structuring code by keeping HTML, CSS, and JavaScript separate.
  e) Learned how to reset canvas elements programmatically.

5) Key Concepts
  a) HTML5 Canvas Drawing
  b) Mouse Events Handling (mousedown, mousemove, mouseup)
  c) Line Styling (lineWidth, lineCap, strokeStyle)
  d) DOM Manipulation with JavaScript
  e) Responsive and Modern CSS Styling
