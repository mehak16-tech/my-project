PROJECT: Real-Time Character Counter
1) Technologies Used:
  a) HTML for structure
  b) CSS for styling and layout
  c) JavaScript for live character count logic

2) Project Overview:
    In this project, I built a simple Character Counter tool. The user types inside a textarea, and the number of characters typed is displayed instantly.
    This is useful for forms, text areas with limits, or apps like Twitter where users need to keep track of characters.
    It is especially useful in:
     a) Forms with character limits (e.g. feedback forms, job applications).
     b) Social media text boxes (eg. Twitter or Instagram captions).
     c) Text editors or blogging platforms where content length matters.

3) Structure:
  a) Textarea Input: 
    i) A large input box for typing text.
   ii) Connected with an oninput event to detect changes immediately.
      SNIPPET:
         <textarea id="txtData" oninput="showCount()" placeholder="Type something here"></textarea>

  b) Counter Display:
    i) Shows the current number of characters typed. 
   ii) A dynamic counter that updates as the user types.
       SNIPPET:
          Number of Characters: <span id="counter">0</span>
            
  C) JavaScript Function:
    i) Reads the content of the textarea using getElementById.
   ii) Calculates the length of the string. 
  iii) Updates the innerText of the counter in real time.  
       SNIPPET:
          function showCount() {
            var count = document.getElementById("txtData").value.length;
            document.getElementById("counter").innerText = count;
            }

  d) Styling (CSS):
    i) The layout is centered using a container with padding, border-radius, and shadow for a clean look.
   ii) Counter is highlighted in blue for visibility.
  iii) Textarea is responsive, with smooth spacing for better typing experience.   
       SNIPPET:
          #counter {
            font-weight: bold;
            color: #007bff;
            }

4) Learning Outcomes
  a) Learnt how to connect HTML, CSS, and JS together in one small project.
  b) Understood real-time DOM manipulation using oninput events.
  c) Practiced writing clean UI styles with shadows, padding, and responsive design.
  d) Got hands-on with updating page content dynamically using JavaScript.

5) Key Concepts
  a) Event Handling (oninput)
  b) DOM Manipulation (getElementById, innerText)
  c) Responsive & Clean CSS Styling
  d) Dynamic UI Updates

