LIVE CHARACTER COUNTER PROJECT DESCRIPTION

1. PROJECT OVERVIEW
   This project is about creating a simple live character counter using HTML, Bootstrap, and JavaScript.
   It contains a textarea where the user types text and a counter that displays the total number of characters typed in real time.

2. INPUT FIELD: Textarea
   - Purpose: Allows the user to type any content (letters, numbers, symbols, spaces).
   - Placeholder: "Start typing..."
   - Behavior: As the user types or deletes text, the counter updates automatically.
   - Default Value: Empty (so counter starts at 0).

3. CHARACTER COUNTER DISPLAY
   - A <span> element shows the number of characters.
   - Initially set to 0.
   - Updates every time the input changes.

4. JAVASCRIPT FUNCTIONALITY (Main Logic)
   Function Name: showCount()

   Step-by-step working:
   - The textarea has an "oninput" attribute. This means whenever the user types, deletes, or pastes something, it triggers the showCount() function.
   - Inside showCount():
        const count = document.getElementById("txtData").value.length;
        → This line takes the current value of the textarea and calculates its length.
        document.getElementById("counter").innerText = count;
        → This line updates the <span> element with the new character count.
   - The process repeats instantly with every keystroke, giving a live counter effect.

   Example:
   - User types "Hello" → length = 5 → counter shows 5.
   - User deletes "o" → length = 4 → counter shows 4.
   - User clears everything → length = 0 → counter resets to 0.

5. CSS STYLING (Through Bootstrap)
   - container: Centers the content and provides spacing.
   - card p-3: Creates a white card box with padding for neat design.
   - form-control: Styles the textarea with borders and responsiveness.
   - my-2: Adds vertical margin to textarea for spacing.
   - rows="5": Fixes the height of the textarea to 5 lines.

6. LEARNING OUTCOMES
   - Understood how to link HTML with JavaScript for live updates.
   - Learnt the use of "oninput" event to capture typing activity.
   - Experienced how Bootstrap classes simplify layout and styling.
   - Realized how small projects like this build confidence in using JavaScript for interactivity.
