1. PROJECT OVERVIEW
This project is about creating a Live Character Counter using HTML, CSS, and JavaScript.
It contains a textarea where the user types text and a counter that displays the total number of characters typed in real time. The design is styled with CSS to provide a clean and modern user interface.

2. INPUT FIELD: Textarea
Purpose: Allows the user to type any content (letters, numbers, symbols, spaces).
Placeholder: "Start typing..." (gives a hint before typing begins).
Behavior: As the user types or deletes text, the counter updates automatically.
Default Value: Empty (so the counter starts at 0).

3. CHARACTER COUNTER DISPLAY
Implemented using a <p> element with the ID charCount.
Initially set to show Characters: 0.
Updates every time the input changes to reflect the exact number of characters typed.

4. JAVASCRIPT FUNCTIONALITY (Main Logic)
The logic of the project is written in JavaScript.

Step-by-step working:
The textarea element and counter element are connected using their IDs.
An event listener is added to the textarea for the input event.
This means whenever the user types, deletes, or pastes something, the script runs automatically.
Inside the function, the length of the text inside the textarea is calculated.
The counter text is then updated with the new length.
This process repeats instantly with every keystroke, giving a live counter effect.

Example:

User types "Hello" → length = 5 → counter shows Characters: 5.
User deletes "o" → length = 4 → counter shows Characters: 4.
User clears everything → length = 0 → counter resets to Characters: 0.

5. CSS STYLING (Through style.css)

The CSS styles make the project neat and user-friendly.

Body:

Light gray background (#f5f5f5).
Arial, sans-serif font.
Padding around the page for spacing.

Container:

Fixed width and centered on the page.
White background with padding for content.
Rounded corners for a modern look.
Soft shadow to give a card effect.

Textarea:

Width: 90% of the container, height: 150px.
Padded text for comfort.
Border with rounded edges.
Resize enabled vertically for flexibility.

Character Counter Text:

Positioned below the textarea.
Medium font size and dark gray color for readability.

6. LEARNING OUTCOMES

Through this project, the following concepts were learned:
Linking HTML, CSS, and JavaScript files to work together.
Using the input event in JavaScript to detect typing activity.
Practicing DOM manipulation with getElementById() and updating content dynamically.
Designing a simple, clean layout with custom CSS.
Realizing how small interactive projects can build confidence in using JavaScript for web interactivity.